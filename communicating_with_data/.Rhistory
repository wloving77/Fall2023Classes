color = fcyl)) +
geom_point(shape = 45) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +
geom_point(shape = 10) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +
geom_point(shape = 1) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 1) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +
geom_point(shape = 1) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 1) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 24) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 10) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 5) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 24) # shape is being used as an attribute (will effect all markers the homogeneously)
# Color refers to the outline of the shape.
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +
geom_point(shape = 24) # shape is being used as an attribute (will effect all markers the homogeneously)
# Some shapes allow color and fill
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 21, color  = 'white', size = 12)
ggplot(data, aes(x=age, y=income, color=as.factor(data$edu)))
data$fedu <- as.factor(data$edu)
ggplot(data, aes(x=age, y=income, color=fedu))
ggplot(data, aes(x=age, y=income))
ggplot(data, aes(x=age, y=income, colo=fedu)) + geom_point()
ggplot(data, aes(x=age, y=income, colo=fedu)) + geom_point() + geom_smooth()
ggplot(data, aes(x=age, y=income, color=fedu)) + geom_point() + geom_smooth()
ggplot(data, aes(x=age, y=income, color=fedu)) +
geom_point() +
geom_smooth()
ggplot(mtcars,
aes(x = wt,
y = mpg,
shape = fcyl)) +
geom_point()
# change shape and color by fcyl (although this is redundant information)
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +
geom_point(aes(shape = fcyl))
data$fsex <- as.factor(data$sex)
ggplot(data, aes(x=age,y=income, shape=fsex)) +
geom_point() +
geom_smooth()
ggplot(data, aes(x=age,y=income, color=fsex)) +
geom_point() +
geom_smooth()
ggplot(data, aes(x=age,y=income, shape=fsex)) +
geom_point() +
geom_smooth(aes(color=fsex))
ggplot(data, aes(x=age,y=income, shape=fsex)) +
geom_point(aes(color=fsex)) +
geom_smooth(aes(color=fsex))
# to change marker size overall, use size argument as attribute
ggplot(mtcars,
aes(x = wt,
y = mpg,
fill = fcyl)) +
geom_point(shape = 21, color  = 'white', size = 12)
# To change marker size dependent on variable info, place inside aesthetics mapping.
ggplot(mtcars,
aes(x = wt,
y = mpg,
size = fcyl)) +
geom_point()
# To change marker size dependent on variable info, place inside aesthetics mapping.
ggplot(mtcars,
aes(x = wt,
y = mpg,
size = fcyl, shape=fcyl, color=fcyl)) +
geom_point()
# To change marker size dependent on variable info, place inside aesthetics mapping.
ggplot(mtcars,
aes(x = wt,
y = mpg,
size = fcyl)) +
geom_point()
# inside aesthetics mapping, transparency will be determined by variable
ggplot(mtcars,
aes(x = wt,
y = mpg,
alpha = fcyl)) +
geom_point()
# as attribute, all markers will be made the same transparency
ggplot(income, aes(age, income, color = fedu)) +
geom_point(alpha = .6)
# as attribute, all markers will be made the same transparency
ggplot(data, aes(age, income, color = fedu)) +
geom_point(alpha = .6)
# in aesthetic layer
ggplot(mtcars,
aes(x = wt,
y = mpg,
linetype = fcyl)) +
geom_line()                   # Note change in geom layer
# as an attribute
ggplot(mtcars,
aes(x = wt,
y = mpg )) +
geom_line(linetype = 'dashed')
ggplot(mtcars,
aes(x = wt,
y = mpg,
label = fcyl)) +
geom_text()                 # Note change in geom layer
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex)) +
geom_plot()
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex)) +
geom_point()
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex alpha=0.6)) +
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex, alpha=0.6)) +
geom_point()
geom_smooth()
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex, alpha=0.6)) +
geom_point()
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex, alpha=0.6)) +
geom_point() +
geom_smooth()
ggplot(data, aes(x=age, y=income, size=fedu, color=fsex, alpha=0.6)) +
geom_point()
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point() +
geom_smooth(color = 'pink', fill = 'white') # attribute
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point() +
geom_smooth(color = '#2A9D8F', fill = '#FFFFFF') # attribute
my_color = '#2A9D8F'
my_fill = '#FFFFFF'
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point() +
geom_smooth(color = my_color, fill = my_fill) # attribute
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10) +  # attribute
geom_smooth(color = my_color, fill = my_fill) # attribute
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill) # attribute
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill, linetype = 'dashed') # attribute
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill, linetype = 'dashed') +  # attribute
geom_text(label = rownames(mtcars), size = 3) # attribute
# labeling titles, y-axis, x-axis
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill, linetype = 'dashed') +  # attribute
geom_text(label = rownames(mtcars), size = 3) + # attribute
labs(
title = 'MTCARS',
subtitle = 'DS2003',
caption = 'making charts is fun') +
ylab('Miles per Gallon (MPG)') +
xlab('Weight (Tons)')
# labeling titles, y-axis, x-axis
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill, linetype = 'dashed') +  # attribute
geom_text(label = rownames(mtcars), size = 10) + # attribute
labs(
title = 'MTCARS',
subtitle = 'DS2003',
caption = 'making charts is fun') +
ylab('Miles per Gallon (MPG)') +
xlab('Weight (Tons)')
# labeling titles, y-axis, x-axis
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill, linetype = 'dashed') +  # attribute
geom_text(label = rownames(mtcars), size = 2) + # attribute
labs(
title = 'MTCARS',
subtitle = 'DS2003',
caption = 'making charts is fun') +
ylab('Miles per Gallon (MPG)') +
xlab('Weight (Tons)')
# labeling legend, using tag
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = fcyl)) +  # aesthetic
geom_point(size = 10, alpha = 0.4) +  # attribute
geom_smooth(color = my_color, fill = my_fill, linetype = 'dashed') +  # attribute
geom_text(label = rownames(mtcars), size = 3) + # attribute
labs(
title = 'MTCARS',
subtitle = 'DS2003',
caption = 'making charts is fun') +
ylab('Miles per Gallon (MPG)') +
xlab('Weight (Tons)') +
labs(color = 'Cylinders', tag = 'A')
# position = 'identity' is default
ggplot(iris,     # new dataset
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = 'identity') # in practice, don't need to specify default
# Jitter
ggplot(iris,     # new dataset
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = 'jitter')
preset_jitter <- position_jitter (0.1, seed = 123) # how much noise
ggplot(iris,     # new dataset
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = preset_jitter)
ggplot(iris,     # new dataset
aes(Sepal.Length,
fill = Species)) +
geom_bar()
ggplot(iris,     # new dataset
aes(Sepal.Length,
fill = Species)) +
geom_bar(position = 'dodge')
# x-axis limits
ggplot(iris,
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = preset_jitter) +
xlim(5, 7)
# Reverse axis
ggplot(iris,
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = preset_jitter) +
xlim(7, 5)
# y-axis limits
ggplot(iris,
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = preset_jitter) +
ylim(2.5, 4)
# color scales
ggplot(iris,
aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = preset_jitter) +
scale_colour_brewer()
ggplot(mtcars, aes(fcyl)) +
geom_bar() # counts the number of cases at each x position
mtcars %>%
select(fcyl, wt) %>%
gather(key, value, -fcyl) %>%
group_by(fcyl) %>%
summarise(avg = mean(value),
sd = sd(value)) -> mtcars_summary_long
mtcars %>%
select(fcyl, wt) %>%
gather(key, value, -fcyl) %>%
group_by(fcyl) %>%
summarise(avg = mean(value),
sd = sd(value)) -> mtcars_summary_long
mtcars_summary_long
# Bar Graphs
# geom_col()
ggplot(mtcars_summary_long, aes(fcyl, avg)) +
geom_col() + # plots actual values
geom_errorbar(aes(ymin = avg - sd,
ymax = avg + sd),
width = 0.1,
color = 'orange')
#Bar Graph
# stat_count() - similar to geom_bar()
ggplot(mtcars, aes(fcyl)) +
stat_count()
ggplot(data, aes(fedu)) +
stat_count()
#boxplot
ggplot(mtcars, aes(fcyl, mpg)) +
geom_boxplot()
library(ggplot2)
library(ggplot2)
library(readxl)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(tidyverse)
flights <- read.csv("../data/flights.csv")
airports <- read.csv("../data/airports.csv")
head(flights)
head(airports)
job_data <- read.csv("../data/us-software-engineer-jobs-zenrows.csv")
view(job_data)
head(job_data)
View(head(job_data))
chart <- ggplot(job_data, aes(x = rating, y = types, fill=location)) + geom_line()
job_data_trunc <- head(job_data, 5000)
chart <- ggplot(job_data_trunc, aes(x = rating, y = types, fill=location)) + geom_line() + geom_smooth()
chart
View(chart)
job_data_trunc <- head(job_data, 500)
chart <- ggplot(job_data_trunc, aes(x = rating, y = types, fill=location)) + geom_line() + geom_smooth()
chart
chart <- ggplot(job_data_trunc, aes(x = rating, y = types)) + geom_line() + geom_smooth()
chart
chart <- ggplot(job_data_trunc, aes(x = rating, y = types)) + geom_bar()
chart
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("../data/EDA_TitanicData/data/titanic.csv")
library(readr)
library(readr)
data <- read.csv("../data/EDA_TitanicData/data/titanic.csv")
library(readr)
data <- read.csv("../data/EDA_TitanicData/data/titanic.csv")
view(data)
View(data)
library(readr)
data <- read.csv("data/titanic.csv")
View(data)
head(data)
str(data)
summary(data)
data$sex = factor(data$sex)
data$age = as.integer(data$age)
str(data)
data$survived = factor(data$survived)
str(data)
summary(data)
data <- data[data$pclass==2]
data <- data[data$pclass==2, ]
data(c(name, age, sex))
data <- data[data$pclass==2, c("name", "age", "sex")]
head(data)
sum(is.na(data))
sum(is.na(data$age))
data <- read.csv("data/titanic.csv")
data_class <- data[data$pclass==2, c("name", "age", "sex")]
head(data_class)
sum(is.na(data))
sum(is.na(data$age))
library(dplyr)
data <- data%>%
mutate(sex = recode(sex,
"male"="m",
"female"="f"
))
head(data)
data_first_class <- data[data$pclass==1, ]
mean(data_first_class$ticket)
head(data_first_class)
data_first_class$ticket = as.numeric(data_first_class$ticket)
head(data_first_class)
data_first_class$ticket = numeric(data_first_class$ticket)
data_first_class$ticket = as.numeric(data_first_class$ticket)
head(data_first_class)
head(data)
data_first_class$fare = as.numeric(data_first_class$fare)
mean(data_first_class$fare)
round(mean(data_first_class$fare), 2)
library(ggplot2)
geom_plot(data, aes(fare)) + geom_histogram()
geom_plot(data, aes(x = fare)) + geom_histogram()
ggplot(data, aes(x = fare)) + geom_histogram()
ggplot(data, aes(x=embarked, y=fare)) + geom_bar()
ggplot(data, aes(x=embarked, y=fare)) + geom_point()
ggplot(data, aes(x=fare, fill=embarked)) + geom_histogram(binwidth=10)
ggplot(data, aes(x=fare, fill=embarked)) + geom_histogram(binwidth=10) +   facet_wrap(~ embarked, ncol = 1)
ggplot(data, aes(x=cabin, y=sex)) + geom_bar()
data_proportions <- data %>%
group_by(cabin) %>%
mutate(prop_sex = table(sex) / sum(table(sex)))
data_proportions <- data %>%
group_by(cabin, sex) %>%
summarise(count = n()) %>%
group_by(cabin) %>%
mutate(prop_sex = count / sum(count))
# Create the barplot
ggplot(data_proportions, aes(x = cabin, y = prop_sex, fill = sex)) +
geom_bar(stat = "identity") +
labs(title = "Cabin Class vs. Sex (Proportions)",
x = "Cabin Class",
y = "Proportion",
fill = "Sex") +
scale_y_continuous(labels = scales::percent_format(scale = 1))
ggplot(data, aes(x=cabin, fill=sex)) + geom_bar(position="dodge")
ggplot(data, aes(x = cabin, fill = sex)) +
geom_bar(position = "stack") +
labs(title = "Cabin vs. Number of Men and Women",
x = "Cabin",
y = "Count",
fill = "Sex")
data_proportional <- data %>%
group_by(cabin)
view(data_proportional)
View(data_proportional)
ggplot(data, aes(x=sex, y=plcass)) + geom_bar
ggplot(data, aes(x=sex, y=plcass)) + geom_bar()
ggplot(data, aes(x=sex, y=pcass)) + geom_bar()
ggplot(data, aes(x=sex, y=pclass)) + geom_bar()
ggplot(data, aes(x=sex, y=pclass)) + geom_bar(position="dodge")
ggplot(data, aes(x=factor(pclass), fill=sex)) + geom_bar(position="dodge")
ggplot(data, aes(x=factor(survived), fill=sex)) + geom_bar(position="dodge")
ggplot(data, aes(x=factor(survived), fill=sex)) + geom_bar(position="dodge", color=blue)
ggplot(data, aes(x=factor(survived), fill=sex)) + geom_bar(position="dodge")
ggplot(data, aes(x=factor(survived), fill=sex), color=blue) + geom_bar(position="dodge")
ggplot(data, aes(x=factor(survived), fill=sex), color=red) + geom_bar(position="dodge")
ggplot(data, aes(x=factor(survived), fill=sex)) +
scale_fill_manual(values = c("red", "blue")) +
geom_bar(position="dodge")
ggplot(data, aes(x=factor(survived), fill=sex)) +
scale_fill_manual(values = c("red", "blue")) +
geom_bar(position="dodge") +
labs(x="Survived", y="SexCount")
ggplot(data, aes(x=factor(pclass), fill=sex)) +
scale_fill_manual(colors = c("red","blue")) +
geom_bar(position="dodge") +
labs(x="Cabin Class", y="SexCount")
ggplot(data, aes(x=factor(pclass), fill=sex)) +
scale_fill_manual(values = c("red","blue")) +
geom_bar(position="dodge") +
labs(x="Cabin Class", y="SexCount")
ggplot(data, aes(x = fare, color="blue")) + geom_histogram()
ggplot(data, aes(x = fare)) + geom_histogram()
Ranking<-read.csv("/Users/wlovi/Downloads/University_Ranking.csv")
library(readr)
Ranking<-read.csv("/Users/wlovi/Downloads/University_Ranking.csv")
Ranking<-read.csv("/Users/wlovi/Downloads/World University Ranking 2023.csv")
library(readr)
Ranking<-read.csv("/Users/wlovi/Downloads/World University Ranking 2023.csv")
Ranking<-read.csv("/Users/wlovi/Downloads/World_University_Ranking_2023.csv")
Ranking<-read.csv("C:/Users/wlovi/Downloads/World_University_Ranking_2023.csv")
Ranking<-read.csv("C:\Users\wlovi\Downloads\World_University_Rankings_2023.csv")
library(readr)
Ranking<-read.csv("C:\Users\wlovi\Downloads\World_University_Rankings_2023.csv")
